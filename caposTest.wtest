import capos.*

describe "Tests Ejercicio 1"{
    test "1.1 Rolando"{
        rolando.encuentra(espadaDestino)
        assert.that(rolando.tiene(espadaDestino))
        rolando.encuentra(libroHechizos)
        assert.that(rolando.tiene(libroHechizos))
        rolando.encuentra(collarDivino)
        assert.notThat(rolando.tiene(collarDivino))
        console.println("rolando tiene" + rolando.mochila())
    }

    test "1.2 Castillo de piedra" {
        rolando.encuentra(espadaDestino)
        rolando.encuentra(libroHechizos)
        rolando.llegaA(castilloPiedra)
        assert.equals(#{espadaDestino, libroHechizos}, castilloPiedra.arcas())
        assert.that(rolando.mochila().isEmpty())
        rolando.encuentra(collarDivino)
        assert.that(rolando.tiene(collarDivino))
        rolando.llegaA(castilloPiedra)
        assert.equals(#{espadaDestino, libroHechizos, collarDivino}, castilloPiedra.arcas())
    }

    test "1.3 posesiones de Rolando" {
        castilloPiedra.incorpora(collarDivino)
        castilloPiedra.incorpora(espadaDestino)
        rolando.encuentra(armaduraValyria)
        assert.equals(#{collarDivino, espadaDestino, armaduraValyria}, 
                    rolando.posee())
        assert.equals(3, rolando.posee().size())
    }

    test "1.4 historia de encuentros" {
        rolando.encuentra(espadaDestino)
        rolando.encuentra(libroHechizos)
        rolando.encuentra(collarDivino)
        rolando.llegaA(castilloPiedra)
        rolando.encuentra(armaduraValyria)
        rolando.encuentra(collarDivino)
        assert.equals(espadaDestino, rolando.agenda().first())
        assert.equals(libroHechizos, rolando.agenda().get(1))
        assert.equals(collarDivino, rolando.agenda().get(2))
        assert.equals(armaduraValyria, rolando.agenda().get(3))
        assert.equals(collarDivino, rolando.agenda().get(4))
        console.println("rolando se encontr√≥ con" + rolando.agenda())
    }

    
}

describe "Ejercicio 2 mensajes con bloques" {
  test "2.1 comportamiento de los artefactos" {
    rolando.poderBase(5)
    rolando.capacidadMochila(3)
    rolando.encuentra(espadaDestino)
    rolando.encuentra(armaduraValyria)
    rolando.encuentra(collarDivino)
    //1era batalla
    rolando.batalla()
    assert.equals(6, rolando.poderBase())
    assert.equals(3, espadaDestino.aportePoder(rolando))
    assert.equals(6, armaduraValyria.aportePoder(rolando))
    assert.equals(3, collarDivino.aportePoder(rolando))
    //2da batalla
    rolando.batalla()
    assert.equals(7, rolando.poderBase())
    assert.equals(3.5, espadaDestino.aportePoder(rolando))
    assert.equals(6, armaduraValyria.aportePoder(rolando))
    assert.equals(5, collarDivino.aportePoder(rolando))
    //3era batalla
    rolando.batalla()
    assert.equals(8, rolando.poderBase())
    assert.equals(4, espadaDestino.aportePoder(rolando))
    assert.equals(6, armaduraValyria.aportePoder(rolando))
    assert.equals(6, collarDivino.aportePoder(rolando))

  }
}